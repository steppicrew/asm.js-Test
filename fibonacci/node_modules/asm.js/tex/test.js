String.prototype.pad = function(n, c) {
    var s = '';

    c = String(c == null ? ' ' : c);

    for (var i = this.length; i < n; i++) {
        s += c[0];
    }

    return s + this;
};

Number.prototype.map = (function(global) {
    return function(f, thisArg) {
        var result = [];
        if (thisArg == null)
            thisArg = global;
        for (var i = 0; i < this; i++) {
            result[i] = f.call(thisArg, i);
        }
        return result;
    };
})(this);

ArrayBuffer.prototype.hex = function() {
    var a = new Uint8Array(this);
    var n = a.length;

    return (n / 16).map(function(lineno) {
        var base = lineno * 16;
        return Math.min(16, n - base).map(function(colno) {
            return a[base + colno].toString(16).pad(2, '0');
        });
    }).map(function(line, i) {
        return ((i * 16).toString(16).pad(7, '0')) + ' ' + line.join(' ');
    });
};

ArrayBuffer.prototype.hexdump = function() {
    this.hex().forEach(function(line) {
        console.log(line);
    });
};

var b = new ArrayBuffer(36);

var u8 = new Uint8Array(b);

u8[13] = 0x42;
u8[17] = 0x37;

var u32 = new Uint32Array(b);
u32[1] = 0xabad1dea;

b.hexdump();
